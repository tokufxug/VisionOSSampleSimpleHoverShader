#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.0.5.508.2)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    def Material "Material"
    {
        token outputs:mtlx:surface.connect = </Root/Material/PBRSurface.outputs:out>
        token outputs:realitykit:vertex
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (483.59766, 41)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 79

        def Shader "HoverState"
        {
            uniform token info:id = "ND_realitykit_hover_state"
            float outputs:intensity
            bool outputs:isActive
            float3 outputs:position
            float outputs:timeSinceHoverStart
            float2 ui:nodegraph:node:pos = (-340.70312, 73.51172)
            int ui:nodegraph:node:stackingOrder = 13
        }

        def Shader "PBRSurface"
        {
            uniform token info:id = "ND_realitykit_pbr_surfaceshader"
            color3f inputs:baseColor = (0, 0, 0) (
                colorSpace = "lin_srgb"
            )
            float3 inputs:clearcoatNormal
            float inputs:clearcoatRoughness
            color3f inputs:emissiveColor.connect = </Root/Material/Mix.outputs:out>
            bool inputs:hasPremultipliedAlpha
            float3 inputs:normal
            float inputs:roughness
            token outputs:out
            float2 ui:nodegraph:node:pos = (170.05078, 32.23828)
            int ui:nodegraph:node:stackingOrder = 80
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
        }

        def Shader "Mix"
        {
            uniform token info:id = "ND_mix_color3"
            color3f inputs:fg = (0, 1, 0) (
                colorSpace = "lin_srgb"
            )
            prepend float inputs:mix.connect = </Root/Material/HoverState.outputs:intensity>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-109.03516, 34.828125)
            int ui:nodegraph:node:stackingOrder = 76
        }
    }

    def "Skull" (
        active = true
        references = @Skull.usdz@
    )
    {
        reorder nameChildren = ["geom", "Left_Eye", "Right_Eye"]
        float3 xformOp:scale = (1, 1, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Sphere "Left_Eye" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Material> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double radius = 0.1
            float2 ui:nodegraph:node:pos = (215.75, 104)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.2, 0.2, 0.2)
            float3 xformOp:translate = (-0.041226324, 0.13534452, 0.071858555)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/Skull/Left_Eye/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (0.2, 0.2, 0.2)
                    float radius = 0.1
                    token shapeType = "Sphere"

                    def RealityKitStruct "pose"
                    {
                    }
                }
            }

            def RealityKitComponent "InputTarget"
            {
                uniform token info:id = "RealityKit.InputTarget"
            }
        }

        def Sphere "Right_Eye" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Material> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double radius = 0.1
            float2 ui:nodegraph:node:pos = (235.75, 124)
            int ui:nodegraph:node:stackingOrder = 2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.19999994, 0.19999994, 0.19999994)
            float3 xformOp:translate = (0.03627956, 0.13534452, 0.071858555)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/Skull/Right_Eye/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (0.2, 0.2, 0.2)
                    float radius = 0.1
                    token shapeType = "Sphere"

                    def RealityKitStruct "pose"
                    {
                    }
                }
            }

            def RealityKitComponent "InputTarget"
            {
                uniform token info:id = "RealityKit.InputTarget"
            }
        }
    }
}

